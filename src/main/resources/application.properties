spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres

spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true

transacao.host=${TRANSACAO_URL:http://localhost:7777/api/cartoes}
feign.client.config.transacao.connect-timeout=100
feign.client.config.transacao.read-timeout=10000

spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/fase04}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/fase04/protocol/openid-connect/certs}

spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost:9092}
spring.kafka.topic.transactions=transacoes
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:minha-aplicacao}
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#--------------COMANDOS DOCKER-----------------#
#docker pull postgres
#docker run --name transacoes -e POSTGRES_PASSWORD=postgres -p 5432:5432 -d postgres
#Vai no DBeaver e testa: USER:postgres, Senha:postgres, porta:5432


